// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  //url      = env("DATABASE_URL")
  //url      = "mysql://root:jiRbwKHfXYWd8C4vRwv2@containers-us-west-32.railway.app:6989/railway"
  url      = "mysql://root:SgHAjIj3cR1d7Xe59NWA@containers-us-west-205.railway.app:7313/railway"
  //url          = "mysql://rztbv6lfv33wcsbt6qb0:pscale_pw_FWAU7dA9ggW640OHqsVHncK9kuh1Pz5JJRF6n6JEV0s@aws.connect.psdb.cloud/tourboost?sslaccept=strict"
  //relationMode = "prisma"
}

model Usuario {
  idUsuario  Int        @id @default(autoincrement())
  nombre     String
  apellidos  String
  password   String
  correo     String     @unique
  admin      Boolean
  marcadores Marcador[]
  reservas   Reserva[]
}

model Marcador {
  idUsuario Int
  idLugar   Int
  usuario   Usuario @relation(fields: [idUsuario], references: [idUsuario])
  lugar     Lugar   @relation(fields: [idLugar], references: [idLugar])

  @@id([idUsuario, idLugar])
}

model Hotel {
  idHotel           Int       @id @default(autoincrement())
  nombre            String    @unique
  direccion         String
  plazasDisponibles Int
  plazasTotales     Int
  telefono_contacto String
  lugar             Lugar     @relation(fields: [idLugar], references: [idLugar])
  idLugar           Int
  reservas          Reserva[]
}

model Reserva {
  idReserva      Int      @id @default(autoincrement())
  fecha_inicio   DateTime
  fecha_fin      DateTime
  idUsuario      Int
  idHotel        Int
  numeroPersonas Int
  expirado       Boolean
  usuario        Usuario  @relation(fields: [idUsuario], references: [idUsuario])
  hotel          Hotel    @relation(fields: [idHotel], references: [idHotel])
}

model Lugar {
  idLugar         Int             @id @default(autoincrement())
  latitud         Float
  longitud        Float
  tipo_lugar      String
  nombre          String          @unique
  nombrePais      String
  pais            Pais            @relation(fields: [nombrePais], references: [nombre])
  hoteles         Hotel[]
  marcadores      Marcador[]
  recomendaciones Recomendacion[]
}

model Recomendacion {
  idRecomendacion Int    @id @default(autoincrement())
  nombre          String
  imagen          String
  descripcion     String
  lugar           Lugar  @relation(fields: [idLugar], references: [idLugar])
  idLugar         Int
}

model Pais {
  nombre      String  @id
  codigo_pais String
  lugares     Lugar[]
}
